.rich-content-editor table {
  width: 100%;
  border-collapse: collapse;
  margin: 1rem 0;
}

.rich-content-editor th {
  background-color: #f3f4f6;
  font-weight: 600;
  text-align: left;
  padding: 0.5rem;
  border: 1px solid #d1d5db;
}

.rich-content-editor td {
  padding: 0.5rem;
  border: 1px solid #d1d5db;
}

.rich-content-editor .ProseMirror {
  min-height: 150px;
}

.rich-content-editor .ProseMirror:focus {
  outline: none;
}

/* Table styles */
.rich-content-editor table {
  width: 100%;
  border-collapse: collapse;
  margin: 1rem 0;
  table-layout: fixed;
}

.rich-content-editor th {
  background-color: #f3f4f6;
  font-weight: 600;
  text-align: left;
  padding: 0.5rem;
  border: 1px solid #d1d5db;
}

.rich-content-editor td {
  padding: 0.5rem;
  border: 1px solid #d1d5db;
  vertical-align: top;
}

/* Editor content styles */
.rich-content-editor .ProseMirror {
  min-height: 150px;
  word-wrap: break-word;
  white-space: pre-wrap;
  white-space: break-spaces;
  padding: 1rem;
}

.rich-content-editor .ProseMirror p.is-editor-empty:first-child::before {
  color: #adb5bd;
  content: attr(data-placeholder);
  float: left;
  height: 0;
  pointer-events: none;
}

/* Ensure proper list spacing and alignment */
.rich-content-editor ul,
.rich-content-editor ol {
  padding-left: 1.5rem;
  margin: 0.5rem 0;
}

.rich-content-editor li {
  margin: 0.25rem 0;
}

/* Blockquote styles */
.rich-content-editor blockquote {
  margin: 1rem 0;
  padding-left: 1rem;
  border-left: 4px solid #e5e7eb;
  color: #6b7280;
}

/* Code block styles */
.rich-content-editor pre {
  background-color: #f3f4f6;
  padding: 1rem;
  border-radius: 0.375rem;
  overflow-x: auto;
}

/* Task list styles */
.rich-content-editor ul[data-type="taskList"] {
  list-style: none;
  padding: 0;
}

.rich-content-editor ul[data-type="taskList"] li {
  display: flex;
  align-items: flex-start;
  gap: 0.5rem;
}

/* Ensure editor container takes full height */
.rich-content-editor .editor-container {
  display: flex;
  flex-direction: column;
  height: 100%;
}

/* Ensure content area scrolls properly */
.rich-content-editor .editor-content {
  flex: 1;
  overflow-y: auto;
  position: relative;
}

/* Remove focus outline from buttons while maintaining accessibility */
.rich-content-editor button:focus-visible {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

.rich-content-editor button:focus:not(:focus-visible) {
  outline: none;
}

/* Styles pour améliorer la visibilité immédiate des couleurs dans l'éditeur TipTap */

/* Garantir que les styles inline ne sont pas écrasés */
.ProseMirror [style*="color:"] {
  color: currentColor !important;
}

.ProseMirror [style*="background-color:"] {
  background-color: currentColor !important;
}

/* Couleurs de texte spécifiques pour l'extension TextStyle */
.ProseMirror .text-red { color: #f87171 !important; }
.ProseMirror .text-blue { color: #60a5fa !important; }
.ProseMirror .text-green { color: #4ade80 !important; }
.ProseMirror .text-yellow { color: #fbbf24 !important; }
.ProseMirror .text-purple { color: #a78bfa !important; }

/* Styles pour le mode sombre */
html[data-theme="dark"] .ProseMirror [style*="color:"] {
  color: currentColor !important;
}

html[data-theme="dark"] .ProseMirror [style*="background-color:"] {
  background-color: currentColor !important;
  opacity: 0.85;
  mix-blend-mode: screen;
}

/* Surcharger TailwindCSS qui peut interférer avec les styles */
.ProseMirror [class*="text-"] {
  color: inherit !important;
}

.ProseMirror [class*="bg-"] {
  background-color: inherit !important;
}

/* Garantir que les couleurs de surbrillance restent visibles */
.ProseMirror mark[style],
.ProseMirror span[data-highlight="true"] {
  background-color: inherit !important;
}

/* En mode sombre, ajuster le mode de fusion pour les couleurs claires */
html[data-theme="dark"] .ProseMirror mark[style*="background-color: rgb(255"],
html[data-theme="dark"] .ProseMirror mark[style*="background-color: #f"],
html[data-theme="dark"] .ProseMirror mark[style*="background-color: #e"] {
  mix-blend-mode: screen !important;
  opacity: 0.7 !important;
}

/* Styles immédiats pour les extensions TipTap */
.ProseMirror .has-text-color {
  color: var(--tiptap-color) !important;
}

.ProseMirror .has-highlight {
  background-color: var(--tiptap-highlight) !important;
}

/* Support pour les attributs data spécifiques de TipTap */
.ProseMirror [data-color] {
  color: attr(data-color) !important;
}

.ProseMirror [data-highlight-color] {
  background-color: attr(data-highlight-color) !important;
}

/* Styles pour les textes colorés */
.ProseMirror [style*="color:"] {
  color: currentColor !important;
  /* Ajoute automatiquement une classe virtuelle pour le ciblage CSS */
  --has-color: true; 
}

/* Cible tous les éléments avec une couleur définie */
.ProseMirror [style*="color:"]:not([data-color-processed]) {
  position: relative;
  /* Marquer l'élément comme traité pour éviter le traitement multiple */
  --data-color-processed: true;
}